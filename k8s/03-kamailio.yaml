apiVersion: v1
kind: ServiceAccount
metadata:
  name: kamailio-pods
---
# which generate it with following cmd
# k create role kamailio-service-viewer --verb=get --verb=watch \
#   --resource=service --resource-name=kamailio --dry-run=client -o yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kamailio-service-viewer
  namespace: default
rules:
- apiGroups:
  - ""
  resourceNames:
  - kamailio
  resources:
  - services
  verbs:
  - get
  - watch
--- 

# create this role binding with following cmd
# k create rolebinding kamailio-service-rolebinding --role=kamailio-service-viewer \
#   --serviceaccount=default:kamailio-pods  --dry-run=client -o yaml -n default
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kamailio-service-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kamailio-service-viewer
subjects:
- kind: ServiceAccount
  name: kamailio-pods
  namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: kamailio
  labels:
    app: kamailio
spec:
  type: LoadBalancer
  selector:
    app: kamailio
  ports:
    - name: sip
      protocol: UDP
      port: 5060
      targetPort: 5060

---
apiVersion: v1
kind: Service
metadata:
  name: kamailio-headless
  labels:
    app: kamailio
spec:
  clusterIP: None
  selector:
    app: kamailio
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kamailio-stateful
  labels:
    app: kamailio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kamailio
  serviceName: "kamailio"
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app: kamailio
    spec:
      serviceAccountName: kamailio-pods
      volumes:
        - name: kamailio-environment-config
          emptyDir: {}
        - name: kamailio-config
          configMap:
            name: kamailio-config
      initContainers:
        - name: fetch-ingress-ip
          image: stedolan/jq
          command: ["/bin/bash"]
          args:
            - '-c'
            - |
              TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);
              NS=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace);
              CA_CRT="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt";
              # LOADBALANCER_IP=$(curl -H "Authorization: Bearer $TOKEN" --cacert $CA_CRT https://kubernetes/api/v1/namespaces/$NS/services/kamailio | jq -r .status.loadBalancer.ingress[0].ip);
              LOADBALANCER_IP=$(wget -O- --header "Authorization: Bearer $TOKEN" --ca-certificate $CA_CRT https://kubernetes/api/v1/namespaces/$NS/services/kamailio | jq -r .status.loadBalancer.ingress[0].ip);
              printf '#!define SIP_LB_IP %s \n' $LOADBALANCER_IP >> /data/kamailio/local.k;
          volumeMounts:
            - name: kamailio-environment-config
              mountPath: /data/kamailio

        - name: init-kamailio-config
          image: tutum/dnsutils
          env:
            # following is the kamailio's environment
            - name: LOCAL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SIP_LB_DOMAIN
              value: kamailio.test.hellostrong.org
            - name: WEBRTC_ING_DOMAIN
              value: webrtc.test.hellostrong.org

            # following is RTPEngine's environment
            - name: DB_SVC_NAME
              valueFrom:
                configMapKeyRef:
                  name: kamailio-db-config
                  key: DB_SVC_NAME
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: kamailio-db-config
                  key: DATABASE
            - name: RW_USER
              valueFrom:
                secretKeyRef:
                  name: kamailio-db-secret
                  key: RW_USER
            - name: RW_PASSWD
              valueFrom:
                secretKeyRef:
                  name: kamailio-db-secret
                  key: RW_PASSWD
            - name: RO_USER
              valueFrom:
                secretKeyRef:
                  name: kamailio-db-secret
                  key: RO_USER
            - name: RO_PASSWD
              valueFrom:
                secretKeyRef:
                  name: kamailio-db-secret
                  key: RO_USER
            - name: DBURL
              value: "mysql://$(RW_USER):$(RW_PASSWD)@$(DB_SVC_NAME)/$(DATABASE)"
            - name: DBROURL
              value: "mysql://$(RO_USER):$(RO_PASSWD)@$(DB_SVC_NAME):6447/$(DATABASE)"
          command: ["/bin/bash"]
          args:
            - '-c'
            - |
              # get ordinal number from hostname
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1;
              ordinal=${BASH_REMATCH[1]};
              # following command generate the rtpengine's config
              printf 'server_id=%s\n' $ordinal >> /data/kamailio/local.k;
              printf '#!trydef DBURL "%s"\n' $DBURL >> /data/kamailio/local.k;
              printf '#!trydef RODBURL "%s"\n' $DBROURL >> /data/kamailio/local.k;
              printf '#!trydef CONTACT_DB "contacts_db=>%s"\n' $DBROURL >> /data/kamailio/local.k;
              # following command generate the kamailio's config
              printf 'alias=%s\n' $SIP_LB_DOMAIN  >> /data/kamailio/local.k;
              printf 'alias=%s\n' $WEBRTC_ING_DOMAIN  >> /data/kamailio/local.k;
              printf 'listen=udp:%s:5060 advertise SIP_LB_IP\n' $LOCAL_IP >> /data/kamailio/local.k;
              printf '#!substdef "!MY_IP4_ADDR!%s!g"\n' $LOCAL_IP >> /data/kamailio/local.k;

          volumeMounts:
            - name: kamailio-environment-config
              mountPath: /data/kamailio

      containers:
      - name: kamailio
        # image: efficacy38/kamailio:v1.13
        image: localhost:32000/kamailio
        imagePullPolicy: Always
        # command: ["sleep", "infinity"]
        ports:
        - containerPort: 5060
        volumeMounts:
          - name: kamailio-environment-config
            mountPath: /data/kamailio
          - name: kamailio-config
            mountPath: /etc/kamailio
